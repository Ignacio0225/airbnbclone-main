"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import environ
from django.conf.global_settings import AUTH_USER_MODEL

env = environ.Env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
environ.Env.read_env(os.path.join(BASE_DIR,".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

THIRD_PARTY_APPS = [
    "rest_framework",
    #토큰 인증 서드파티, migrate 해야함 새로운 데이터베이스가 생김
    'rest_framework.authtoken',
]

CUSTOM_APPS = [
    'users.apps.UsersConfig',
    'rooms.apps.RoomsConfig',
    'common.apps.CommonConfig',
    'experiences.apps.ExperiencesConfig',
    'categories.apps.CategoriesConfig',
    'reviews.apps.ReviewsConfig',
    'wishlists.apps.WishlistsConfig',
    'booking.apps.BookingConfig',
    'medias.apps.MediasConfig',
    'direct_messages.apps.DirectMessagesConfig'
]

SYSTEM_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
INSTALLED_APPS = CUSTOM_APPS + SYSTEM_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.User'

#사진을 저장할 폴더를 만들어줌
MEDIA_ROOT ='uploads'

#사진을 저장할 URL을 만들어줌 , 클라우드서비스
MEDIA_URL = 'user-uploads/'

#+static(settings.MEDIA_URL,document_root=settings.MEDIA_ROOT) urlpatterns 리스트 외부에 추가

PAGE_SIZE = 3

REST_FRAMEWORK={
    #request.user 보다 먼저 실행됨
    'DEFAULT_AUTHENTICATION_CLASSES':[
        #기본 인증 (아무도 안씀, 헤더를 사용함)
        'rest_framework.authentication.BasicAuthentication',
        #장고 유저 인증의 기본값 (쓰지않아도 이상태)
        'rest_framework.authentication.SessionAuthentication',
        #위에랑 아래를 통해서 user를 찾지 못했다면 로그아웃 된상태라는의미
        #헤더를 사용하는 베이직 인증하고 같음 방식을 커스텀해서 만듬
        # 'config.authentication.TrustMeBroAuthentication',
        #토큰인증 설정
        'rest_framework.authentication.TokenAuthentication',
        #JWT인증 설정
        'config.authentication.JWTAuthentication',
    ]
}